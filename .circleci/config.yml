version: 2
# Tell CircleCI to use this workflow
workflows:
  version: 2
  default:
    jobs:
      - "python-2.7"
      - "python-3.6"
      - "deploy-pypi":
          requires:
            - "python-2.7"
            - "python-3.6"
          filters:
            tags:
              only: /^v.*/

      - "deploy-conda":
          requires:
            - "python-2.7"
            - "python-3.6"
          filters:
            tags:
              only: /^v.*/

jobs:
  "python-2.7":
    # This is the base environment that Circle will use
    docker:
      - image: frolvlad/alpine-miniconda3

    steps:
      - run: apk add --no-cache build-base ca-certificates git openssh bash curl

      # Get our data and merge with upstream
      - checkout

      # Restore cached files to speed things up
      - restore_cache:
          keys:
            - conda-pkgs-{{ checksum "environment-dev.yml" }}

      - run: # install and activate conda environment
          command: ./ci/install-circleci.sh 2.7

      # Cache some files for a speedup in subsequent builds
      - save_cache:
          key: conda-pkgs-{{ checksum "environment-dev.yml" }}
          paths:
            - /opt/conda/pkgs

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports

  "python-3.6":
    # This is the base environment that Circle will use
    docker:
      - image: frolvlad/alpine-miniconda3

    steps:
      - run: apk add --no-cache build-base ca-certificates git openssh bash curl

      # Get our data and merge with upstream
      - checkout

      # Restore cached files to speed things up
      - restore_cache:
          keys:
            - conda-pkgs-{{ checksum "environment-dev.yml" }}

      - run: # install and activate conda environment
          command: ./ci/install-circleci.sh 3.6

      # Cache some files for a speedup in subsequent builds
      - save_cache:
          key: conda-pkgs-{{ checksum "environment-dev.yml" }}
          paths:
            - /opt/conda/pkgs
      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports
      # Tell Circle to store the documentation output in a folder that we can access later
      - store_artifacts: 
          path: docs/_build/html
          destination: html

  "deploy-pypi":
    # This is the base environment that Circle will use
    docker:
      - image: frolvlad/alpine-miniconda3

    steps:
      - run: apk add --no-cache build-base ca-certificates git openssh bash curl

      # Get our data and merge with upstream
      - checkout

      - run: 
          name: Deploy package release to PyPI 
          command: ./ci/install-circleci.sh 3.6 pypi
            
            
     

  "deploy-conda":
    # This is the base environment that Circle will use
    docker:
      - image: frolvlad/alpine-miniconda3

    steps:
      - run: apk add --no-cache build-base ca-certificates git openssh bash curl

      # Get our data and merge with upstream
      - checkout

      - run:
          name: Deploy package release to Anaconda.org
          command: ./ci/install-circleci.sh 3.6 conda 

            