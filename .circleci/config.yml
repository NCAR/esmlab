version: 2
# Tell CircleCI to use this workflow
workflows:
  version: 2
  default:
    jobs:
      - "python-3.6"
      - "python-3.7"
      - "docs-build"
      - "linting"

default-job: &default-job
  docker:
    - image: conda/miniconda3:latest
  steps:
    - checkout
    - restore_cache:
        key: deps-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_JOB }}
    - run:
        name: Install conda environment
        command: ./ci/install-circle.sh
    - run:
        name: Running checks
        command: ./ci/${TEST_SCRIPT}
    - save_cache:
        key: deps-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_JOB }}
        paths:
          - "/usr/local/envs/${ENV_NAME}/"
          - "/usr/local/pkgs"


jobs:
  "python-3.6":
    <<: *default-job
    environment:
      PYTHON: "3.6"
      ENV_NAME: "esmlab-dev"
      TEST_SCRIPT: "run-checks.sh"

  "python-3.7":
    <<: *default-job
    environment:
      PYTHON: "3.7"
      ENV_NAME: "esmlab-dev"
      TEST_SCRIPT: "run-checks.sh"

  "linting":
    <<: *default-job
    environment:
      PYTHON: "3.7"
      ENV_NAME: "esmlab-dev"
      TEST_SCRIPT: "run-linter.sh"


  "docs-build":
    docker:
      - image: conda/miniconda3:latest

    environment:
      PYTHON: "3.7"
      ENV_NAME: "esmlab-dev"

    steps:

      # Get our data and merge with upstream
      - checkout
      # Restore cached files to speed things up
      - restore_cache:
          key: deps-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_JOB }}
      - run: # install and activate conda environment
          name: Install conda environment
          command: ./ci/install-circle.sh
      - run:
          name: Check documentation build
          command: |
            source activate ${ENV_NAME}
            pushd docs
            make html
            popd
      # Cache some files for a speedup in subsequent builds
      - save_cache:
          key: deps-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_JOB }}
          paths:
            - "/usr/local/envs/${ENV_NAME}/"
            - "/usr/local/pkgs"

      # Tell Circle to store the documentation output in a folder that we can access later
      - store_artifacts:
          path: docs/_build/html
          destination: html
