version: 2
# Tell CircleCI to use this workflow
workflows:
  version: 2
  default:
    jobs:
      - "python-2.7"
      - "python-3.6"
      - "python-3.7"
      - "docs-build"
      - "linting"
      - "upstream-dev":
          filters:
            branches:
              only: devel

jobs:
  # Python 2.7 build
  "python-2.7":
    docker:
      - image: conda/miniconda3:latest

    environment:
      PYTHON: "2.7"
      ENV_NAME: "esmlab-dev"

    steps:
      - checkout

      # Restore cached files to speed things up
      - restore_cache:
          key: deps-{{ .Branch }}-2.7-{{ checksum "ci/environment-dev-2.7.yml" }}

      - run: # install and activate conda environment
          name: Install conda environment
          command: ./ci/install-circle.sh

      - run:
          command: |
            source activate ${ENV_NAME}
            pytest --junitxml=test-reports/junit.xml --cov=./ --verbose

      - save_cache:
          key: deps-{{ .Branch }}-2.7-{{ checksum "ci/environment-dev-2.7.yml" }}
          paths:
            - "/opt/conda/envs/${ENV_NAME}/"
            - "/opt/conda/pkgs"

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports

  "python-3.6":
    docker:
      - image: conda/miniconda3:latest

    environment:
      PYTHON: "3.6"
      ENV_NAME: "esmlab-dev"

    steps:

      # Get our data and merge with upstream
      - checkout

      # Restore cached files to speed things up
      - restore_cache:
          key: deps-{{ .Branch }}-3.6-{{ checksum "ci/environment-dev-3.6.yml" }}

      - run: # install and activate conda environment
          name: Install conda environment
          command: ./ci/install-circle.sh
      - run:
          command: |
            source activate ${ENV_NAME}
            pytest --junitxml=test-reports/junit.xml --cov=./ --verbose

      - run:
          name: Code Coverage
          command: |
            source activate ${ENV_NAME}
            echo "[Upload coverage]"
            codecov

      # Cache some files for a speedup in subsequent builds
      - save_cache:
          key: deps-{{ .Branch }}-3.6-{{ checksum "ci/environment-dev-3.6.yml" }}
          paths:
            - "/opt/conda/envs/${ENV_NAME}/"
            - "/opt/conda/pkgs"

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports


  "python-3.7":
    docker:
      - image: conda/miniconda3:latest

    environment:
      PYTHON: "3.7"
      ENV_NAME: "esmlab-dev"

    steps:

      # Get our data and merge with upstream
      - checkout

      # Restore cached files to speed things up
      - restore_cache:
          key: deps-{{ .Branch }}-3.7-{{ checksum "ci/environment-dev-3.7.yml" }}

      - run: # install and activate conda environment
          name: Install conda environment
          command: ./ci/install-circle.sh
      - run:
          command: |
            source activate ${ENV_NAME}
            pytest --junitxml=test-reports/junit.xml --cov=./ --verbose

      - run:
          name: Code Coverage
          command: |
            source activate ${ENV_NAME}
            echo "[Upload coverage]"
            codecov


      # Cache some files for a speedup in subsequent builds
      - save_cache:
          key: deps-{{ .Branch }}-3.7-{{ checksum "ci/environment-dev-3.7.yml" }}
          paths:
            - "/opt/conda/envs/${ENV_NAME}/"
            - "/opt/conda/pkgs"

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports


  "docs-build":
    docker:
      - image: conda/miniconda3:latest

    environment:
      PYTHON: "3.7"
      ENV_NAME: "esmlab-dev"

    steps:

      # Get our data and merge with upstream
      - checkout

      # Restore cached files to speed things up
      - restore_cache:
          key: deps-{{ .Branch }}-3.7-{{ checksum "ci/environment-dev-3.7.yml" }}

      - run: # install and activate conda environment
          name: Install conda environment
          command: ./ci/install-circle.sh


      - run:
          name: Check documentation build
          command: |
            source activate ${ENV_NAME}
            pushd docs
            make html
            popd


      # Cache some files for a speedup in subsequent builds
      - save_cache:
          key: deps-{{ .Branch }}-3.7-{{ checksum "ci/environment-dev-3.7.yml" }}
          paths:
            - "/opt/conda/envs/${ENV_NAME}/"
            - "/opt/conda/pkgs"

      # Tell Circle to store the documentation output in a folder that we can access later
      - store_artifacts:
          path: docs/_build/html
          destination: html


  "linting":
    docker:
      - image: conda/miniconda3:latest

    environment:
      PYTHON: "3.7"
      ENV_NAME: "esmlab-dev"

    steps:

      # Get our data and merge with upstream
      - checkout

      # Restore cached files to speed things up
      - restore_cache:
          key: deps-{{ .Branch }}-3.7-{{ checksum "ci/environment-dev-3.7.yml" }}

      - run: # install and activate conda environment
          name: Install conda environment
          command: ./ci/install-circle.sh

      - run:
          name: Code Styling with (black, flake8, isort)
          command: |
            source activate ${ENV_NAME}

            echo "[flake8]"
            flake8

            echo "[black]"
            black --check --line-length=100 -S --exclude='esmlab/_version.py|versioneer.py' .

            echo "[isort]"
            isort --recursive -w 100 --check-only .


      # Cache some files for a speedup in subsequent builds
      - save_cache:
          key: deps-{{ .Branch }}-3.7-{{ checksum "ci/environment-dev-3.7.yml" }}
          paths:
            - "/opt/conda/envs/${ENV_NAME}/"
            - "/opt/conda/pkgs"

  "upstream-dev":
    docker:
      - image: conda/miniconda3:latest

    environment:
      PYTHON: "3.7-dev"
      ENV_NAME: "esmlab-dev"

    steps:

      # Get our data and merge with upstream
      - checkout

      # Restore cached files to speed things up
      - restore_cache:
          key: deps-{{ .Branch }}-3.7-dev-{{ checksum "ci/environment-dev-3.7-dev.yml" }}

      - run: # install and activate conda environment
          name: Install conda environment
          command: ./ci/install-circle.sh
      - run:
          command: |
            source activate ${ENV_NAME}
            pytest --junitxml=test-reports/junit.xml --cov=./ --verbose

      - run:
          name: Code Coverage
          command: |
            source activate ${ENV_NAME}
            echo "[Upload coverage]"
            codecov


      # Cache some files for a speedup in subsequent builds
      - save_cache:
          key: deps-{{ .Branch }}-3.7-dev-{{ checksum "ci/environment-dev-3.7-dev.yml" }}
          paths:
            - "/opt/conda/envs/${ENV_NAME}/"
            - "/opt/conda/pkgs"

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports
